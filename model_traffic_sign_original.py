import numpy as np
import pandas as pd
from tensorflow import keras
from picamera2 import Picamera2
import cv2
import time

####################### ??????? ???? #######################
frameWidth = 320  # ????? ????? ?????? ???? ??????
frameHeight = 240
threshold = 0.7
font = cv2.FONT_HERSHEY_SIMPLEX
target_fps = 30  # ???? ???????? ????????

####################### ????? ??????? ?????? #######################
model = keras.models.load_model("/home/pi/Desktop/Grad_project/shady/model_trained.keras")

####################### ????? ?????? ??? ??? ??????? #######################
def getClassName(classNo):
    label_data = pd.read_csv("/home/pi/Desktop/Grad_project/shady/labels.csv")
    return label_data.iloc[classNo]["Name"]

####################### ?????? ?????? ??? ??????? #######################
def preprocessing(img):
    img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)
    img = cv2.equalizeHist(img)
    img = img / 255
    return img

####################### ????? ?????? Picam2 ?? ??????? V3 #######################
picam2 = Picamera2()

# ????? ???????? ????????? ?? ?????? V3
config = picam2.create_video_configuration(
    main={"size": (frameWidth, frameHeight), "format": "RGB888"},
    controls={"FrameRate": target_fps, "AfMode": 2, "AfSpeed": 1}  # ??? ??????? ???????? ??????
)
picam2.configure(config)

# ????? ??????? ???????? ???????
picam2.set_controls({"AfMode": 2, "AfSpeed": 1})
picam2.start()

# ??????? ????? ??????
frame_count = 0
start_time = time.time()

try:
    while True:
        # ?????? ???? ?? ????????
        frame = picam2.capture_array()
        
        # ??? ???? ?? ?????? ??????? ?????
        imgOriginal = frame.copy()
        
        # ?????? ?????? ???????
        img = cv2.resize(imgOriginal, (32, 32))
        img = preprocessing(img)
        img = img.reshape(1, 32, 32, 1)

        # ?????? ???????? ???????
        predictions = model.predict(img, verbose=0)
        classIndex = np.argmax(predictions)
        probabilityValue = np.max(predictions)

        # ??? ?????? ????? ???? ???????
        if probabilityValue > threshold:
            className = getClassName(classIndex)
            cv2.putText(imgOriginal, f"{className}", (30, 40), font, 1, (0, 0, 255), 2)
            cv2.putText(imgOriginal, f"{round(probabilityValue * 100, 2)}%", (30, 80), font, 1, (0, 255, 0), 2)

        # ??? ??????
        cv2.imshow("Traffic Sign Recognition - Pi Cam V3", imgOriginal)

        # ???? ???? ????????
        frame_count += 1
        if frame_count % 100 == 0:
            elapsed = time.time() - start_time
            fps = frame_count / elapsed
            print(f"Actual FPS: {fps:.2f}")
            frame_count = 0
            start_time = time.time()

        # ??????? ?????? ?????? ??? ?? q
        if cv2.waitKey(1) & 0xFF == ord("q"):
            break
        if cv2.getWindowProperty("Traffic Sign Recognition - Pi Cam V3", cv2.WND_PROP_VISIBLE) < 1:
            break

finally:
    picam2.stop()
    cv2.destroyAllWindows()

